{
  "name": "Morpheus Aruba Tasks Development",
  // Temporary: use a locally-built image to avoid Docker Hub outage for
  // `docker/dockerfile` frontend. Restore the `build` block after the
  // outage is resolved.

  "containerEnv": {
    "DOCKER_BUILDKIT": "1",
    "OPENAI_API_BASE": "https://api.githubcopilot.com",
    "OPENAI_API_KEY": "${localEnv:GITHUB_TOKEN:-}",
    "AIDER_MODEL": "gpt-4",
    "AIDER_AUTO_COMMITS": "false",
    "AIDER_DARK_MODE": "true",
    "AIDER_CONFIG": "${containerWorkspaceFolder}/ai-support/config/.aider.conf.yml"
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "timonwong.shellcheck",
        "rogalmic.bash-debug",
        "foxundermoon.shell-format",
        "mads-hartmann.bash-ide-vscode",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.pylint",
        "ms-python.flake8",
        "ms-python.black-formatter",
        "ms-python.debugpy",
        "davidanson.vscode-markdownlint",
        "yzhang.markdown-all-in-one",
        "bierner.markdown-preview-github-styles",
        "github.vscode-pull-request-github",
        "github.vscode-github-actions",
        "eamodio.gitlens",
        "donjayamanne.githistory",
        "github.copilot",
        "github.copilot-chat",
        "editorconfig.editorconfig",
        "esbenp.prettier-vscode",
        "redhat.vscode-yaml",
        "redhat.vscode-xml",
        "usernamehw.errorlens",
        "aaron-bond.better-comments",
        "streetsidesoftware.code-spell-checker",
        "wayou.vscode-todo-highlight",
        "gruntfuggly.todo-tree",
        "snyk-security.snyk-vulnerability-scanner",
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        "jetmartin.bats",
        "kherring.bats-test-runner",
        "lakshmikanthayyadevara.githooks",
        "ArshdeepSingh.toggle-terminal-through-status-bar",
        "ms-vscode.vscode-markdown-notebook",
        "zombiezen.ivy"
      ],
      "settings": {
        // Shellcheck
        "shellcheck.enable": true,
        "shellcheck.run": "onType",
        "shellcheck.executablePath": "/usr/bin/shellcheck",
        "shellcheck.customArgs": [],

        // Shell Format
        "shellformat.path": "/usr/bin/shfmt",
        "shellformat.flag": "-i 2 -ci -bn",

        // Bash IDE
        "bashIde.explainshellEndpoint": "https://explainshell.com",
        "bashIde.shellcheckPath": "/usr/bin/shellcheck",

        // Python
        "python.defaultInterpreterPath": "/usr/bin/python3",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Enabled": true,
        "python.formatting.provider": "black",
        "python.analysis.typeCheckingMode": "basic",

        // Markdown
        "markdownlint.config": {
          "extends": ".markdownlint.json"
        },
        "markdown.preview.breaks": true,

        // Editor
        "files.eol": "\n",
        "files.insertFinalNewline": true,
        "files.trimTrailingWhitespace": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll": "explicit"
        },
        "editor.rulers": [80, 120],
        "editor.tabSize": 2,
        "editor.insertSpaces": true,

        // Git
        "git.autofetch": true,
        "git.confirmSync": false,
        "git.enableSmartCommit": true,

        // Terminal
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.scrollback": 10000,

        // GitHub Copilot - Custom Instructions
        "github.copilot.advanced": {
          "debug.overrideEngine": "gpt-4",
          "debug.useNodeFetcher": true
        },
        "github.copilot.enable": {
          "*": true,
          "yaml": true,
          "plaintext": true,
          "markdown": true,
          "shellscript": true
        },

        // File Associations
        "[shellscript]": {
          "editor.defaultFormatter": "foxundermoon.shell-format",
          "editor.tabSize": 2
        },
        "[markdown]": {
          "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
          "editor.wordWrap": "on"
        },
        "[python]": {
          "editor.defaultFormatter": "ms-python.python",
          "editor.tabSize": 4
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[yaml]": {
          "editor.defaultFormatter": "redhat.vscode-yaml"
        }
      }
    }
  },
  "mounts": [
    // Os mounts condicionais são configurados no post-create.sh
    // para evitar erros quando os diretórios não existem
  ],
  // NOTE: Temporary workaround — use a locally built image when Docker Hub is
  // returning 503 for the buildkit/frontend (docker/dockerfile). Remove this
  // `image` entry after the upstream outage is resolved.
  "image": "test-morpheus-aruba:latest",
  "postCreateCommand": "bash .devcontainer/post-create.sh && pip3 install --user aider-chat",
  "remoteUser": "vscode",
  "features": {}
}
